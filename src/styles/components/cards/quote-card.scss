@use '@styles/helpers' as *;

/* Quote Card */
.quote-card {
  --card-border-radius: #{rem(28)};
  --card-px: #{rem(28)};
  --card-py: #{rem(28)};
  --card-gap: #{rem(32)};
  --card-ico-size: #{rem(32)};
  --card-bg-color: var(--color-basic-black-30);
  --card-bd-filter: blur(4.75rem);
  --card-glow: var(--color-primary);

  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--card-border-radius);

  &--shine {
    --card-decor-blur-size: 12vw;
    --card-bg-color: var(--color-basic-black-50);

    border: rem(1) solid transparent;
    background:
      linear-gradient(180deg, var(--color-basic-black-80), var(--color-basic-black-80)) padding-box,
      radial-gradient(
        220% 180% at 0% 100%,
        color-mix(in oklab, var(--card-glow) 80%, transparent),
        color-mix(in oklab, var(--card-glow) 20%, transparent) 25%,
        transparent 60%
      ) border-box;

    @include respond-below(md) {
      --card-decor-blur-size: 40vw;
    }

    &::after,
    &::before {
      content: '';
      position: absolute;
      z-index: -1;
      border-radius: var(--card-decor-blur-size);
      width: var(--card-decor-blur-size);
      height: var(--card-decor-blur-size);
      filter: blur(9.375rem);
      pointer-events: none;
    }

    &::before {
      left: 0;
      bottom: 0;
      background-color: var(--color-primary);
      opacity: 0.4;
    }

    &::after {
      right: 0;
      top: 0;
      background: var(--color-basic-white-100);
      opacity: 0.2;
    }

    .quote-card__inner {
      backdrop-filter: var(--card-bd-filter);
    }
  }

  &--lg {
    --card-border-radius: #{fluid(42, 28)};
    --card-px: #{fluid(64, 28)};
    --card-py: #{fluid(64, 28)};
    --card-gap: #{fluid(40, 32)};
    --card-ico-size: #{fluid(48, 32)};

    .quote-card__ico {
      &:not(:last-child) {
        @include respond-above(md) {
          margin-block-end: rem(24);
        }
      }
    }

    .quote-card__description {
      @include respond-above(md) {
        font-size: rem(20);
      }

      @include respond-below(md) {
        font-size: rem(16);
      }
    }
  }

  &__inner {
    position: relative;
    z-index: 9;
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    justify-content: space-between;
    gap: var(--card-gap);
    overflow: hidden;
    border: rem(1) solid var(--color-basic-white-5);
    border-radius: inherit;
    padding: var(--card-py) var(--card-py);
    background-color: var(--card-bg-color);
  }

  &__row {
    --col-width: 100%;
    --col-gap: #{rem(40)};

    display: flex;
    flex-wrap: wrap-reverse;
    align-items: center;
    margin-inline: calc(var(--col-gap) / 2 * -1);
    row-gap: var(--col-gap);

    @include respond-above(md) {
      --col-width: 50%;
      --col-gap: 2rem;
    }

    @include respond-above(2xl) {
      --col-gap: 4rem;
    }
  }

  &__col {
    flex: 0 0 var(--col-width);
    max-width: var(--col-width);
    padding-inline: calc(var(--col-gap) / 2);

    &--text {
      @include respond-above(md) {
        --col-width: 54%;
      }
    }

    &--media {
      @include respond-above(md) {
        --col-width: 46%;
      }
    }
  }

  &__review-badge {
    &:not(:last-child) {
      margin-block-end: rem(24);
    }
  }

  &__ico {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: calc(var(--card-ico-size) * 0.5);
    font-weight: 400;
    line-height: 1;
    color: var(--color-primary);
    block-size: var(--card-ico-size);
    inline-size: var(--card-ico-size);

    &:not(:last-child) {
      margin-block-end: rem(12);
    }
  }

  &__description {
    font-size: rem(18);
    font-weight: 400;
    line-height: 1.4;
    letter-spacing: var(--body-letter-spacing);

    &:not(:last-child) {
      margin-block-end: var(--card-gap);
    }
  }
}
